class WebSocketIO{constructor(e){if(null!=e)this.url=e;else{let e="https:"===window.location.protocol?"wss://":"ws://";this.url=e+window.location.host+"/"+window.location.pathname.split("/")[1]}this.ws=null,this.messages={},this.outbound={},this.aliasCount=1,this.remoteListeners={"#WSIO#addListener":"0000"},this.localListeners={"0000":"#WSIO#addListener"}}open(e,s){console.log("WebsocketIO> open",this.url),this.ws=new WebSocket(this.url),this.ws.binaryType="arraybuffer",e instanceof Function&&(this.ws.onopen=e),s instanceof Function&&(this.ws.onerror=s),this.ws.onmessage=(e=>{let s;if("string"==typeof e.data){let t=JSON.parse(e.data);if(void 0===(s=this.localListeners[t.f]))console.log("WebsocketIO> No handler for message");else if("#WSIO#addListener"===s){if(this.remoteListeners[t.d.listener]=t.d.alias,this.outbound.hasOwnProperty(t.d.listener)){let e;for(e=0;e<this.outbound[t.d.listener].length;e++)this.emit(t.d.listener,this.outbound[t.d.listener][e]);delete this.outbound[t.d.listener]}}else this.messages[s](t.d)}else{let t=new Uint8Array(e.data),o=String.fromCharCode(t[0])+String.fromCharCode(t[1])+String.fromCharCode(t[2])+String.fromCharCode(t[3]);s=this.localListeners[o];let i=t.subarray(4,t.length);this.messages[s](i)}}),this.ws.onclose=(e=>{console.log("WebsocketIO> socket closed"),"close"in this.messages&&this.messages.close(e)})}on(e,s){let t=("0000"+this.aliasCount.toString(16)).substr(-4);this.localListeners[t]=e,this.messages[e]=s,this.aliasCount++,"close"!==e&&this.emit("#WSIO#addListener",{listener:e,alias:t})}emit(e,s){if(null==e||""===e)return void console.log("WebSocketIO> No message name specified");let t,o;if(this.remoteListeners.hasOwnProperty(e))if(o=this.remoteListeners[e],s instanceof Uint8Array){let e=new Uint8Array(4);e[0]=o.charCodeAt(0),e[1]=o.charCodeAt(1),e[2]=o.charCodeAt(2),e[3]=o.charCodeAt(3),(t=new Uint8Array(4+s.length)).set(e,0),t.set(s,4),this.ws.send(t.buffer)}else t={f:o,d:s},this.ws.send(JSON.stringify(t));else this.outbound.hasOwnProperty(e)||(this.outbound[e]=[]),this.outbound[e].push(s),setTimeout(()=>{this.removeOutbound(e)},1e3)}removeOutbound(e){this.outbound.hasOwnProperty(e)&&this.outbound[e].length>0&&(console.log("WebsocketIO> Warning: not sending message, recipient has no listener ("+e+")"),this.outbound[e].splice(0,1),0==this.outbound[e].length&&delete this.outbound[e])}close(){this.ws.onclose=function(){},this.ws.close()}}